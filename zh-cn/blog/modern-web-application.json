{
  "filename": "modern-web-application.md",
  "__html": "<h1 id=\"%E8%AE%A9%E7%90%86%E6%83%B3%E4%B8%AD%E7%9A%84%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%AB%99%E7%82%B9%E5%BC%80%E5%8F%91%E8%B5%B0%E8%BF%9B%E5%A4%A7%E4%BC%97---serverlessdevs-1024%E7%89%B9%E5%88%AB%E5%A5%89%E7%8C%AE\">让理想中的企业级站点开发走进大众 - ServerlessDevs 1024特别奉献 <a class=\"header-anchor\" href=\"#%E8%AE%A9%E7%90%86%E6%83%B3%E4%B8%AD%E7%9A%84%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%AB%99%E7%82%B9%E5%BC%80%E5%8F%91%E8%B5%B0%E8%BF%9B%E5%A4%A7%E4%BC%97---serverlessdevs-1024%E7%89%B9%E5%88%AB%E5%A5%89%E7%8C%AE\">#</a></h1>\n<h2 id=\"1024%E8%8A%82%E7%A5%9D%E8%AF%AD\">1024节祝语 <a class=\"header-anchor\" href=\"#1024%E8%8A%82%E7%A5%9D%E8%AF%AD\">#</a></h2>\n<p>首先祝各位同学 1024节快乐，阖家欢乐，健康平安。今天也是ServerlessDevs 发展满一年的纪念日，我们从最初的蹒跚起步，探索碰壁，迷茫彷徨到现在的步伐稳健，循序渐进，自信坚定。经历从1.0到2.0，从命令行到桌面可视化，从封闭的数据源到更加开放的多数据源能力，每一次革新都是对自我的拷问，拷问我们是否依然坚持那个“为了开发者的一切，一切为了开发者”的初心。随着越来越多的开发者加入，使用Serverless Devs，并为ServerlessDevs 提出宝贵的意见，让我们越发相信，虽然前途依然坎坷，但此行值得。</p>\n<h2 id=\"%E6%96%B0%E7%9A%84%E5%B9%B2%E8%B4%A7\">新的干货 <a class=\"header-anchor\" href=\"#%E6%96%B0%E7%9A%84%E5%B9%B2%E8%B4%A7\">#</a></h2>\n<p>当然今天不是为了煽情而来，我们准备了更大的干货，借今天的好日子分享给大家，首先向大家宣布我们的 <a href=\"https://serverless-devs.com/zh-cn\">新官网</a> 正式上线了，更加清晰的梳理了我们的产品能力和文档介绍，并且加入了在线<a href=\"https://serverlesshub.resume.net.cn/\">应用中心</a>，供开发者提供直观的在线选择应用的服务，那么今天的主菜也是这个“应用中心”，由我来为大家介绍一下它背后的实现。</p>\n<h2 id=\"%E7%90%86%E6%83%B3%E7%9A%84%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%AB%99%E7%82%B9\">理想的企业级站点 <a class=\"header-anchor\" href=\"#%E7%90%86%E6%83%B3%E7%9A%84%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%AB%99%E7%82%B9\">#</a></h2>\n<p>之前介绍了几篇使用 Serverless Devs 开发站点的介绍，包括Jamstack，包括使用我们的函数计算或者OSS 进行托管。对于一般用以展示的用户而言已经足够用，但大家可以试想一下，对于真正的企业的站点服务而言是否足够。尤其在安全接口层面，诸如流量控制，IP访问控制，后端签名，JWT鉴权等是否也是必须的，我想这个答案应当是肯定的，企业对安全的诉求甚至是大于性能，体验的。\n安全的能力再加上可以应对高并发，具备实时弹性，具备可观测，可调测能力，同时性能，体验，可扩展都非常优秀是我们认为的理想的企业级站点。\n理想的企业级站点在现实中其实不多，因为想要实现这样的理想，往往需要非常大规模的人力投入，从投入产出上考量的话很多公司可能都会放弃，值得庆幸的是在云原生时代，依靠Serverless技术，投入极少人力甚至单个人实现这样理想的企业站点已经变为可能。\n以云服务将安全能力，弹性高可用能力，可观测能力“BAAS化”为前提，结合ServerlessDevs 工具做串联粘合，接下来我们的目标就是要让中国更多的网站变成理想的企业级站点，来看一下如何做到</p>\n<h2 id=\"%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%8F%8A%E8%AF%B4%E6%98%8E\">整体架构设计及说明 <a class=\"header-anchor\" href=\"#%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%8F%8A%E8%AF%B4%E6%98%8E\">#</a></h2>\n<p>在展开介绍实现之前，先来看一下理想中的企业级站点的架构是怎样的</p>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986198-386fbb1b-9030-401c-93ef-efa65012f881.png#clientId=u7ec7e16f-8dd3-4&amp;height=433&amp;id=JrhWb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=866&amp;originWidth=2188&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=u3ea3e204-46b7-4427-a433-fc0d4ee51a0&amp;width=1094\" alt=\"image.png\">\n从上图可以看到，dns 将我们的域名解析到 apigateway 公网访问二级域名上,  然后依靠 apigateway 来实现动静态分流，流量控制，ip控制等能力，静态资源托管到oss 服务，你可以利用任意 jamatck 框架，最大化的将站点静态化。 这样会带来诸多好处，如安全，seo友好，体验上佳等。至于动态的api 部分我们优选了阿里云函数计算的 faas 方案，本身后端语言采用的是 javascript 对冷启动的支持非常友好，如果你不想重构自己的服务并且又希望拥有 serverless 化的能力的话可以考虑使用 sae 产品，后续我们也会专门做一期相关的案例实践。\n本次 演示的示例  api 服务仅是做数据的组合转发，并未关联数据库，关于数据库的最佳实践我们目前也正在整理中，相信不久就可以跟大家见面。</p>\n<h2 id=\"%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">准备工作 <a class=\"header-anchor\" href=\"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">#</a></h2>\n<p>虽然 Serverless Devs 可以将整个架构中的构建部署流程做统一处理，但是申请并且认证域名（非香港地区需要备案），云产品的开通等仍然需要开发者自己来操作，不过这些工作比较简单点点鼠标即可完成,已经开通的产品可以忽略这些步骤</p>\n<ul>\n<li><a href=\"https://wanwang.aliyun.com/?spm=5176.21213303.1158081.1.4a0d3edaw8aGsw&amp;scm=20140722.S_card@@%E5%8D%A1%E7%89%87@@581._.ID_card@@%E5%8D%A1%E7%89%87@@581-RL_%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C-OR_ser-V_2-P0_0\">域名申请</a>, 到任意域名服务商申请自己喜欢的域名即可，不过推荐在阿里云万网，能够统一管理，比如笔者申请了 <a href=\"http://serverless-developer.com\">serverless-developer.com</a> 这样的顶级域名，一年60多块钱</li>\n</ul>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986175-3e3bbd52-6fbb-4a2c-9702-7dfd7d2058db.png#clientId=u7ec7e16f-8dd3-4&amp;height=574&amp;id=F8vQq&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1148&amp;originWidth=2382&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=ue0ce19e6-935f-4162-8720-7de73d3d8f3&amp;width=1191\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://www.aliyun.com/product/dns?spm=serverlessdevs\">域名解析</a>, 域名申请好应该会自动开通，我们待会会用它来做一个CNAME解析，解析到我们的 apigateway 公网二级域名</li>\n</ul>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986184-d03bab36-3eb5-43b0-b202-0f19de812808.png#clientId=u7ec7e16f-8dd3-4&amp;height=881&amp;id=SaqcE&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1762&amp;originWidth=3468&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=u21e2e9e0-ad34-49b9-8917-ff5b3b39b16&amp;width=1734\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://www.aliyun.com/product/apigateway?spm=\">apigateway</a>  网关服务，开通后会默认赠送 一个共享实例，费用低廉</li>\n</ul>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986201-697c45e0-111a-4d21-a31c-fda41fbddac3.png#clientId=u7ec7e16f-8dd3-4&amp;height=385&amp;id=EXymX&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=770&amp;originWidth=2324&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=ub7c08e60-4b4c-42c1-b9d1-5aaee45afbc&amp;width=1162\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://www.aliyun.com/product/oss?spm=serverlessdevs\">oss</a> 对象存储， 用来存储我们的静态资源</li>\n</ul>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986232-de3dbdf2-fdc0-4dbc-aec5-5fcf69c401c8.png#clientId=u7ec7e16f-8dd3-4&amp;height=354&amp;id=NzMv0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=708&amp;originWidth=2562&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=ube22f544-a1c0-469f-b0bf-3eb369ccfe4&amp;width=1281\" alt=\"image.png\"></p>\n<ul>\n<li><a href=\"https://www.aliyun.com/product/fc?spm=serverlessdevs\">函数计算</a> ， serverless 后端服务</li>\n</ul>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986633-92df9b63-d1c4-4dfb-a63d-dc6d2c2a0232.png#clientId=u7ec7e16f-8dd3-4&amp;height=380&amp;id=ZBnD2&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=760&amp;originWidth=2306&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=uca82db4a-05f4-413f-bc88-76dd7fc21b4&amp;width=1153\" alt=\"image.png\"></p>\n<h2 id=\"%E5%BA%94%E7%94%A8%E6%A8%A1%E6%9D%BF%E5%88%9D%E5%A7%8B%E5%8C%96\">应用模板初始化 <a class=\"header-anchor\" href=\"#%E5%BA%94%E7%94%A8%E6%A8%A1%E6%9D%BF%E5%88%9D%E5%A7%8B%E5%8C%96\">#</a></h2>\n<p>使用s 命令行工具进行应用模板初始化 <code>s init modern-web-application</code>下载\n下载后可以看到整体目录结构比较清晰，就是动态api部分，静态资源部分和配置文件部分\n<img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067986835-1e9e66d0-938c-4baf-abde-3104815bf268.png#clientId=u7ec7e16f-8dd3-4&amp;height=444&amp;id=FnTus&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=888&amp;originWidth=874&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=u2fc9fdec-42e3-4433-b6d2-c60524e6232&amp;width=437\" alt=\"image.png\"></p>\n<p>我们再展开看一下配置文件,配置文件稍稍复杂些</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">edition:</span> <span class=\"hljs-number\">1.0</span><span class=\"hljs-number\">.0</span> <span class=\"hljs-comment\">#  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范</span>\n<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">modern-web-application</span> <span class=\"hljs-comment\">#  项目名称</span>\n<span class=\"hljs-attr\">access:</span> <span class=\"hljs-comment\">#访问秘钥别名</span>\n<span class=\"hljs-attr\">vars:</span> <span class=\"hljs-string\">''</span> <span class=\"hljs-comment\"># [全局变量，提供给各个服务使用]</span>\n  <span class=\"hljs-attr\">domain:</span> \n  <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">cn-hongkong</span>\n  <span class=\"hljs-attr\">indexFile:</span> <span class=\"hljs-string\">index.html</span>\n  <span class=\"hljs-attr\">fc:</span> \n    <span class=\"hljs-attr\">baseUrl:</span>  <span class=\"hljs-string\">''</span> <span class=\"hljs-comment\">#函数计算触发器地址，可以在部署好函数之后获得。例子： https://xxx.cn-hongkong.fc.aliyuncs.com/2016-08-15/proxy/serverlesshub/serverlesshub/</span>\n  <span class=\"hljs-attr\">oss:</span>\n    <span class=\"hljs-attr\">baseUrl:</span> <span class=\"hljs-string\">''</span> <span class=\"hljs-comment\">#oss 公网访问地址 。例子： https://&lt;bucketname&gt;.oss-cn-hongkong.aliyuncs.com</span>\n    <span class=\"hljs-attr\">bucketName:</span> <span class=\"hljs-string\">hanxie-serverless-hub</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">www:</span> <span class=\"hljs-comment\"># 静态资源</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/website</span>\n    <span class=\"hljs-attr\">actions:</span>\n      <span class=\"hljs-attr\">pre-deploy:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">bucket:</span> <span class=\"hljs-string\">${vars.oss.bucketName}</span>\n      <span class=\"hljs-attr\">src:</span>\n        <span class=\"hljs-comment\"># codeUri: ./</span>\n        <span class=\"hljs-attr\">publishDir:</span> <span class=\"hljs-string\">./www/build</span>\n        <span class=\"hljs-attr\">index:</span> <span class=\"hljs-string\">index.html</span>\n        <span class=\"hljs-attr\">subDir:</span>\n          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">index</span>\n      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">${vars.region}</span>\n  <span class=\"hljs-attr\">apis:</span> <span class=\"hljs-comment\">#动态api</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/fc</span> <span class=\"hljs-comment\"># 组件名称</span>\n    <span class=\"hljs-attr\">actions:</span>\n      <span class=\"hljs-attr\">pre-deploy:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./apis</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">${vars.region}</span>\n      <span class=\"hljs-attr\">service:</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">serverlesshub</span>\n        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">serverless应用市场</span>\n        <span class=\"hljs-attr\">internetAccess:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-attr\">function:</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">serverlesshub</span>\n        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">serverless应用市场的函数</span>\n        <span class=\"hljs-attr\">runtime:</span> <span class=\"hljs-string\">nodejs12</span>\n        <span class=\"hljs-attr\">codeUri:</span> <span class=\"hljs-string\">./apis</span>\n        <span class=\"hljs-attr\">handler:</span> <span class=\"hljs-string\">index.handler</span>\n        <span class=\"hljs-attr\">memorySize:</span> <span class=\"hljs-number\">128</span>\n        <span class=\"hljs-attr\">timeout:</span> <span class=\"hljs-number\">10</span>\n      <span class=\"hljs-attr\">triggers:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">httpTrigger</span>\n          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">http</span>\n          <span class=\"hljs-attr\">config:</span>\n            <span class=\"hljs-attr\">authType:</span> <span class=\"hljs-string\">anonymous</span>\n            <span class=\"hljs-attr\">methods:</span>\n              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">GET</span>\n              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">POST</span>\n      <span class=\"hljs-attr\">customDomains:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">domainName:</span> <span class=\"hljs-string\">auto</span>\n          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">HTTP</span>\n          <span class=\"hljs-attr\">routeConfigs:</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/*</span>\n  <span class=\"hljs-attr\">gateway:</span> <span class=\"hljs-comment\">#  服务名称</span>\n    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">apigateway</span> <span class=\"hljs-comment\"># 这里引入的是相对路径，正式配置替换成你自己的component名称即可</span>\n    <span class=\"hljs-attr\">props:</span>\n      <span class=\"hljs-attr\">regionId:</span> <span class=\"hljs-string\">${vars.region}</span>\n      <span class=\"hljs-attr\">customerDomain:</span> <span class=\"hljs-string\">${vars.domain}</span> <span class=\"hljs-comment\"># 客户自定义域名</span>\n      <span class=\"hljs-attr\">groupName:</span> <span class=\"hljs-string\">release_hub</span> <span class=\"hljs-comment\">#指定分组 这里你可以分开设置环境</span>\n      <span class=\"hljs-attr\">stageName:</span> <span class=\"hljs-string\">RELEASE</span>  \n      <span class=\"hljs-attr\">apis:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiName:</span> <span class=\"hljs-string\">portal_get_api</span> <span class=\"hljs-comment\"># 访问网站的getapi</span>\n          <span class=\"hljs-attr\">regionId:</span> <span class=\"hljs-string\">${vars.region}</span>\n          <span class=\"hljs-attr\">requestConfig:</span>\n            <span class=\"hljs-attr\">requestPath:</span> <span class=\"hljs-string\">/api/*</span>\n            <span class=\"hljs-attr\">requestHttpMethod:</span> <span class=\"hljs-string\">GET</span>\n          <span class=\"hljs-attr\">serviceConfig:</span>\n            <span class=\"hljs-attr\">servicePath:</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-comment\"># 后端路径</span>\n            <span class=\"hljs-attr\">serviceProtocol:</span> <span class=\"hljs-string\">FunctionCompute</span>\n            <span class=\"hljs-attr\">functionComputeConfig:</span> <span class=\"hljs-comment\"># 函数计算的配置</span>\n              <span class=\"hljs-attr\">fcRegionId:</span> <span class=\"hljs-string\">${vars.region}</span> <span class=\"hljs-comment\"># 函数计算region</span>\n              <span class=\"hljs-attr\">fcBaseUrl:</span> <span class=\"hljs-string\">${vars.fc.baseUrl}</span>\n              <span class=\"hljs-attr\">onlyBusinessPath:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># 只接受路径</span>\n              <span class=\"hljs-attr\">contentTypeCatagory:</span> <span class=\"hljs-string\">CLIENT</span>\n              <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/</span>\n            <span class=\"hljs-attr\">resultType:</span> <span class=\"hljs-string\">JSON</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiName:</span> <span class=\"hljs-string\">portal_post_api</span> <span class=\"hljs-comment\"># 访问网站post类型的api</span>\n          <span class=\"hljs-attr\">regionId:</span> <span class=\"hljs-string\">${vars.region}</span>\n          <span class=\"hljs-attr\">requestConfig:</span>\n            <span class=\"hljs-attr\">requestPath:</span> <span class=\"hljs-string\">/api/*</span>\n            <span class=\"hljs-attr\">requestHttpMethod:</span> <span class=\"hljs-string\">POST</span>\n          <span class=\"hljs-attr\">serviceConfig:</span>\n            <span class=\"hljs-attr\">servicePath:</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-comment\"># 后端路径</span>\n            <span class=\"hljs-attr\">serviceProtocol:</span> <span class=\"hljs-string\">FunctionCompute</span>\n            <span class=\"hljs-attr\">functionComputeConfig:</span> <span class=\"hljs-comment\"># 函数计算的配置</span>\n              <span class=\"hljs-attr\">fcRegionId:</span> <span class=\"hljs-string\">${vars.region}</span> <span class=\"hljs-comment\"># 函数计算region</span>\n              <span class=\"hljs-attr\">fcBaseUrl:</span> <span class=\"hljs-string\">${vars.fc.baseUrl}</span>\n              <span class=\"hljs-attr\">onlyBusinessPath:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># 只接受路径</span>\n              <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/</span>\n              <span class=\"hljs-attr\">contentTypeCatagory:</span> <span class=\"hljs-string\">CLIENT</span>\n            <span class=\"hljs-attr\">resultType:</span> <span class=\"hljs-string\">JSON</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiName:</span> <span class=\"hljs-string\">portal_assets</span> <span class=\"hljs-comment\"># 访问站点的静态资源</span>\n          <span class=\"hljs-attr\">regionId:</span> <span class=\"hljs-string\">${vars.region}</span>\n          <span class=\"hljs-attr\">requestConfig:</span>\n            <span class=\"hljs-attr\">requestPath:</span> <span class=\"hljs-string\">/*</span>\n            <span class=\"hljs-attr\">requestHttpMethod:</span> <span class=\"hljs-string\">GET</span>\n          <span class=\"hljs-attr\">serviceConfig:</span>\n            <span class=\"hljs-attr\">serviceAddress:</span> <span class=\"hljs-string\">${vars.oss.baseUrl}</span>\n            <span class=\"hljs-attr\">aoneAppName:</span> <span class=\"hljs-string\">cloudapi-openapi</span>\n            <span class=\"hljs-attr\">servicePath:</span> <span class=\"hljs-string\">/*</span> <span class=\"hljs-comment\"># 后端路径</span>\n            <span class=\"hljs-attr\">serviceHttpMethod:</span> <span class=\"hljs-string\">ANY</span>\n            <span class=\"hljs-attr\">serviceProtocol:</span> <span class=\"hljs-string\">HTTP</span>\n            <span class=\"hljs-attr\">resultType:</span> <span class=\"hljs-string\">JSON</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiName:</span> <span class=\"hljs-string\">protal_index</span> <span class=\"hljs-comment\"># 设置访问站点的主页路径</span>\n          <span class=\"hljs-attr\">regionId:</span> <span class=\"hljs-string\">${vars.region}</span>\n          <span class=\"hljs-attr\">requestConfig:</span>\n            <span class=\"hljs-attr\">requestPath:</span> <span class=\"hljs-string\">/</span>\n            <span class=\"hljs-attr\">requestHttpMethod:</span> <span class=\"hljs-string\">GET</span>\n          <span class=\"hljs-attr\">serviceConfig:</span>\n            <span class=\"hljs-attr\">serviceAddress:</span> <span class=\"hljs-string\">${vars.oss.baseUrl}</span>\n            <span class=\"hljs-attr\">aoneAppName:</span> <span class=\"hljs-string\">cloudapi-openapi</span>\n            <span class=\"hljs-attr\">servicePath:</span> <span class=\"hljs-string\">/index.html</span> <span class=\"hljs-comment\"># 后端路径</span>\n            <span class=\"hljs-attr\">serviceHttpMethod:</span> <span class=\"hljs-string\">GET</span>\n            <span class=\"hljs-attr\">serviceProtocol:</span> <span class=\"hljs-string\">HTTP</span>\n            <span class=\"hljs-attr\">resultType:</span> <span class=\"hljs-string\">JSON</span>\n</code></pre>\n<h3 id=\"%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E7%AE%A1%E7%90%86\">项目初始化及管理 <a class=\"header-anchor\" href=\"#%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E7%AE%A1%E7%90%86\">#</a></h3>\n<p>为了演示方便，下面对应用中包含的服务进行一一部署,本次演示使用 serverless cli + serverless desktop结合的方式 - 用 s 命令行进行项目初始化后，再用serverless desktop进行纳管，进行可视化操作。</p>\n<p><img src=\"https://img.alicdn.com/imgextra/i1/O1CN019QAvJ61HnMMMFKGNn_!!6000000000802-1-tps-1777-944.gif#id=blVxu&amp;originHeight=944&amp;originWidth=1777&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none\" alt=\"\"></p>\n<h3 id=\"%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90\">部署静态资源 <a class=\"header-anchor\" href=\"#%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90\">#</a></h3>\n<p>我们提前已经把静态资源的发布包构建好了存放于 www/build ，只需要执行一下部署即可，如果改动代码后需要重新构建出新的生产包。\n<img src=\"https://img.alicdn.com/imgextra/i1/O1CN01GjGIFh1WiyoAKmzzY_!!6000000002823-1-tps-1777-944.gif#id=oOdnM&amp;originHeight=944&amp;originWidth=1777&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none\" alt=\"\">\ns 工具会把 www/build 下的静态资源上传到用户设置好的 bucket 里面，上传好bucket 之后，我们重新配置好全局的oss.baseUrl 的变量，给后面的gateway使用</p>\n<h3 id=\"%E9%83%A8%E7%BD%B2%E5%8A%A8%E6%80%81%E5%87%BD%E6%95%B0\">部署动态函数 <a class=\"header-anchor\" href=\"#%E9%83%A8%E7%BD%B2%E5%8A%A8%E6%80%81%E5%87%BD%E6%95%B0\">#</a></h3>\n<p>静态部署之后就是动态函数了，这里我们提前准备好了，使用koa 范式构建的 serverless hub 服务端\n<img src=\"https://img.alicdn.com/imgextra/i3/O1CN01tbRbHM1kTJstzDVHO_!!6000000004684-1-tps-1777-944.gif\" alt=\"image.png\">\n部署好之后，刷新一下自己的 函数计算，可以看到已经配置好了需要的服务和函数，同样我们把返回的触发器地址 配置到 全局变量 fc.baseUrl上以备 apigateway 使用。</p>\n<h3 id=\"%E9%83%A8%E7%BD%B2apigateway\">部署apigateway <a class=\"header-anchor\" href=\"#%E9%83%A8%E7%BD%B2apigateway\">#</a></h3>\n<p>动静态的依赖都配好之后，接下来就是gateway配置\n<img src=\"https://img.alicdn.com/imgextra/i3/O1CN01pVkJLx1L132k3FcTo_!!6000000001238-1-tps-1777-944.gif#id=qUQwi&amp;originHeight=944&amp;originWidth=1777&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none\" alt=\"\">\n这里我们会帮您创建一个共享实例下的分组，然后在分组下创建了4个api，它们分别是：</p>\n<ul>\n<li>访问 get 请求的api 【portal_get_api】</li>\n<li>访问 post 请求的 api 【portal_post_api】</li>\n<li>访问 全部静态资源的 api 【portal_assets】</li>\n<li>首页访问入口 api 【protal_index】</li>\n</ul>\n<h3 id=\"%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E7%9B%B8%E5%85%B3\">域名绑定相关 <a class=\"header-anchor\" href=\"#%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E7%9B%B8%E5%85%B3\">#</a></h3>\n<p>因为时间关系，我们没有完全实现自动化的域名绑定，所以最后如果你希望通过自定义域名访问你的网站，还是需要打开产品控制台进行域名的绑定操作。\n<img src=\"https://img.alicdn.com/imgextra/i3/O1CN019ZCsES1uI0G4XBx7O_!!6000000006013-1-tps-1777-944.gif\" alt=\"image.png\"></p>\n<ul>\n<li>1.进入云解析控制台，对自己的域名添加一个 cname 解析，解析内容指定到 apigateway 分组生成的 二级公网访问域名</li>\n<li>2.进入apigateway控制台 ，同样再反绑定一下刚才的域名 <a href=\"http://hanxie.serverless-developer.com\">hanxie.serverless-developer.com</a></li>\n<li>3.进入oss控制台 ，在传输管理-&gt;域名管理 中同样绑定 <a href=\"http://hanxie.serverless-developer.com\">hanxie.serverless-developer.com</a>（注意这里可能要你验证一下dns 的解析，根据提示操作即可）</li>\n</ul>\n<h3 id=\"%E8%AE%BF%E9%97%AE%E6%94%B6%E5%B0%BE\">访问收尾 <a class=\"header-anchor\" href=\"#%E8%AE%BF%E9%97%AE%E6%94%B6%E5%B0%BE\">#</a></h3>\n<p>综上配置好之后（域名解析可能需要一段时间，请耐心等待） 我们就可以通过访问 <a href=\"http://hanxie.serverless-developer.com\">hanxie.serverless-developer.com</a> 来查看访我们的站点了。\n<img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067988403-fe91a4cb-f952-4e85-901b-105142e45f4f.png#clientId=u7ec7e16f-8dd3-4&amp;height=951&amp;id=KCEX3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1902&amp;originWidth=3242&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=ucee462a3-646b-456d-ab78-9acf7662fe4&amp;width=1621\" alt=\"image.png\">\n当然这里还没添加 https证书，你可以创建一个免费的证书，添加到 apigateway上。 这样最后可以得到一个完美的https站点。\n<img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635076043828-88a883bd-1712-48ba-80e6-1e467acf6a36.png#clientId=u6061a79a-8bcd-4&amp;from=paste&amp;height=134&amp;id=u557042a7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=268&amp;originWidth=3082&amp;originalType=binary&amp;ratio=1&amp;size=147505&amp;status=done&amp;style=none&amp;taskId=u41a67153-0060-437b-a9a1-4828c7b2104&amp;width=1541\" alt=\"image.png\"></p>\n<h2 id=\"%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8%E8%83%BD%E5%8A%9B%E7%9A%84%E8%AE%BE%E7%BD%AE\">关于网站安全能力的设置 <a class=\"header-anchor\" href=\"#%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8%E8%83%BD%E5%8A%9B%E7%9A%84%E8%AE%BE%E7%BD%AE\">#</a></h2>\n<p>我们的网站有很多可以加的安全防护， 比如开通 apigateway 专享版，通过内网 vpc 转发oss 以及函数计算服务，避免任意服务暴露到外部，其次我们可以通过添加 apigateway 的插件来增加流量控制，jwt鉴权，ip限制等能力，下面我们演示一下 通过apigateway 插件增加 basic auth 来限制 api 访问。\n<img src=\"https://img.alicdn.com/imgextra/i2/O1CN01z6RiT21e1U7TIbGuT_!!6000000003811-1-tps-1777-944.gif#id=XZlJh&amp;originHeight=944&amp;originWidth=1777&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none\" alt=\"\">\n插件管理-&gt; 创建 -&gt; 选择 basis auther -&gt; 绑定 get api\n可以看到 插件创建好之后我们再次访问 网站会提示401错误，我们再来用 postman 访问一下\n<img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/13970/1635067988443-7956d2e8-3df7-49ad-8d5d-f0e297ddb44f.png#clientId=u7ec7e16f-8dd3-4&amp;height=977&amp;id=dfdCL&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1954&amp;originWidth=3584&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=u1a661c6e-fb83-40bc-bc09-0e41b1d3b0e&amp;width=1792\" alt=\"image.png\">\n一样是401，然后我们添加一下 账号密码再测试一下\n<img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/gif/13970/1635067988470-b6cfc23a-a284-43c4-9048-acd44f4a187a.gif#clientId=u7ec7e16f-8dd3-4&amp;height=944&amp;id=ZCnmi&amp;margin=%5Bobject%20Object%5D&amp;name=dkhttp13.gif&amp;originHeight=944&amp;originWidth=1777&amp;originalType=binary&amp;ratio=1&amp;status=done&amp;style=none&amp;taskId=uae1c39eb-70b5-4469-819f-66c323c833e&amp;width=1777\" alt=\"dkhttp13.gif\">\n可以看到已经通过了。关于其他的安全设置您可以自行尝试</p>\n<h2 id=\"%E5%85%B3%E4%BA%8E%E8%AE%BF%E9%97%AE%E6%80%A7%E8%83%BD%E7%9A%84%E6%8F%90%E5%8D%87\">关于访问性能的提升 <a class=\"header-anchor\" href=\"#%E5%85%B3%E4%BA%8E%E8%AE%BF%E9%97%AE%E6%80%A7%E8%83%BD%E7%9A%84%E6%8F%90%E5%8D%87\">#</a></h2>\n<p>目前我们使用的 apigateway 的共享实例，在并发访问量不大的情况下没有太大问题，当你的网站访问上升，遇到访问慢的时候可以考虑升级到专享实例，这样可以直接通过内网访问静态资源和函数，另外可以按照 jamstak 理念尽量实现最大程度的静态化，可以考虑一些相关的 jamstack框架，关于函数方面，我们目前使用的是 js runtime 部署，冷启动时间会在1s左右浮动， 另外还没有做数据库连接等。如果你觉得比较慢，可以考虑在函数计算上增加预留实例，保障函数的快速运行。</p>\n<h2 id=\"%E5%85%B3%E4%BA%8E%E8%B5%84%E8%B4%B9%E9%97%AE%E9%A2%98\">关于资费问题 <a class=\"header-anchor\" href=\"#%E5%85%B3%E4%BA%8E%E8%B5%84%E8%B4%B9%E9%97%AE%E9%A2%98\">#</a></h2>\n<p>到目前为止给大家展示的都是经计算最省钱的无服务化实现，你不必去购买主机就可以实现一个非常高性能的站点，需要花费的有 ：</p>\n<ul>\n<li>申请域名 （笔者申请的域名大概是60多元一年）。</li>\n<li>apigateway的共享实例是按照流量和api调用计费，本身新网站的话不会花费太高</li>\n<li>fc 本身是有免费流量，新网站几乎超不出这个限制</li>\n<li>oss 本身也是按照存储和公网流量计费，可以说微乎其微</li>\n</ul>\n<p>综上对于新上的站点而言花费是很低的，当然如果你的站点未来访问量上去之后也可以通过加配置无缝升级上去，您的程序无需做任何改进。</p>\n<h2 id=\"%E5%85%B3%E4%BA%8E%E5%A4%9A%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98\">关于多环境设置问题 <a class=\"header-anchor\" href=\"#%E5%85%B3%E4%BA%8E%E5%A4%9A%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98\">#</a></h2>\n<p>在真正开发生产过程中，多环境的问题是避不开的， 上面仅展示了生产环境，你完全可以通过多个配置文件来配置更多的测试和预发环境，按照 apigateway 给的多环境实践进行配置使用，这部分欢迎更多实践的小伙伴与我们交流探索。</p>\n<h2 id=\"%E6%9C%80%E5%90%8E\">最后 <a class=\"header-anchor\" href=\"#%E6%9C%80%E5%90%8E\">#</a></h2>\n<p>基于这套模式你可以自由设置后端api 部分，使用serverelss ，微服务等，不会干扰前端的使用，通过预发测试环境去实践，然后发布到生产。我们欢迎有更多的伙伴加入去探索这个最佳实践，另外后续我会继续展开介绍这套Serverless devs 应用模板的产出细节，你可以自由定制组件，以及自由组合发布流程。 用Iac 的理念通过Serverless Devs 更好的管理自己发布生产流程\n最后如果你觉得上面的文章对你有帮助，不妨去我们的官网帮忙点个赞\n<a href=\"https://github.com/Serverless-Devs/Serverless-Devs\">https://github.com/Serverless-Devs/Serverless-Devs</a></p>\n",
  "link": "/zh-cn/blog/modern-web-application.html",
  "meta": {
    "slug": "modern-web-application",
    "title": "让理想中的企业级站点开发走进大众 - ServerlessDevs 1024特别奉献",
    "author": "serverless devs",
    "author_title": "Serverless Devs",
    "author_url": "https://github.com/Serverless-Devs/Serverless-Devs",
    "author_image_url": "https://avatars.githubusercontent.com/u/21079031?v=4",
    "tags": "[命令行, Serverless, CICD, 原子化操作, 阿里云,apigteway,oss,fc,dns]",
    "date": "2021-10-25"
  }
}